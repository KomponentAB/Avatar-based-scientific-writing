{"version":3,"file":"module2-main-c9f23350.js","sources":["../../src/module2-main.ts"],"sourcesContent":["/// <reference types=\"@workadventure/iframe-api-typings\" />\nimport { checkPlayerMaterial, mySound, playRandomSound } from \"./footstep\";\nimport { getChatAreas } from \"./chatArea\";\nimport { levelUp, quests } from \"./quests\";\nimport { bootstrapExtra } from \"@workadventure/scripting-api-extra\";\n\nWA.onInit().then(async () => {\n    try {\n        // Initialize the Scripting API Extra\n        await bootstrapExtra();\n        WA.controls.disableInviteButton();\n        WA.controls.disableMapEditor();\n        console.log('Scripting API Extra ready');\n    } catch (e) {\n        console.error(e);\n    }\n    // Get chat areas and set up event listeners for entering and leaving them\n    const chatAreas = await getChatAreas();\n    for (const area of chatAreas) {\n        let triggerMessage: any;\n\n        // When player enters a chat area\n        WA.room.area.onEnter(area.name).subscribe(() => {\n            triggerMessage = WA.ui.displayActionMessage({\n                message: `[LEERTASTE] drücken um mit ${area.npcName} zu sprechen.`,\n                callback: () => {\n                    WA.chat.sendChatMessage(area.chatText, area.npcName);\n                    if (area.triggerQuest) {\n                        const currentQuest = WA.player.state.currentQuest;\n                        const requiredQuest = quests.find((q: { questId: string }) => q.questId === area.triggerQuest)?.requireQuest;\n                        if (currentQuest === requiredQuest) {\n                            WA.player.state.currentQuest = area.triggerQuest;\n                        }\n                    }\n                }\n            });\n        });\n\n        // When player leaves a chat area\n        WA.room.area.onLeave(area.name).subscribe(() => {\n            if (triggerMessage) {\n                triggerMessage.remove();\n                WA.chat.close();\n            }\n        });\n    }\n\n    // Event listener for player movement to play footstep sounds\n    WA.player.onPlayerMove(async ({ x, y, moving }) => {\n        const material = await checkPlayerMaterial({ x, y });\n        if (!material) {\n            mySound?.stop();\n            return;\n        }\n\n        if (!moving && !material) {\n            mySound?.stop();\n            return;\n        } else {\n            mySound?.stop();\n            playRandomSound(material);\n        }\n    });\n\n\n    // Display the current quest banner if a quest is active\n    const currentQuestId = WA.player.state.currentQuest;\n    const currentQuest = quests.find((q: { questId: string }) => q.questId === currentQuestId);\n    if (currentQuest) {\n        createQuestBanner(currentQuest.questId);\n    }\n\n    // Event listener for changes in the current quest\n    WA.player.state.onVariableChange('currentQuest').subscribe((newQuestId) => {\n        const newQuest = quests.find((q: { questId: string }) => q.questId === newQuestId);\n        if (newQuest) {\n            createQuestBanner(newQuest.questId);\n        }\n    });\n\n    // Function to create a quest banner\n    function createQuestBanner(questId: string) {\n        const quest = quests.find((q: { questId: string }) => q.questId === questId);\n        if (quest) {\n            WA.ui.banner.openBanner({\n                id: quest.questId,\n                text: quest.questDescription,\n                bgColor: '#1B1B29',\n                textColor: '#FFFFFF',\n                closable: false\n            });\n        }\n    }\n});\nWA.onInit().then(async () => {\nWA.room.area.onEnter('triggerM2Quests').subscribe(() => {\n    WA.player.state.currentQuest = 'quest9' ;\n});})\n\n            \n            // Listen for terminal-related state changes\n            WA.player.state.onVariableChange('terminal-1').subscribe((newValue) => {\n                if (newValue === true) {\n                    WA.player.state.module2 = '1';\n                    WA.chat.sendChatMessage(\"Code korrekt, fahre fort mit dem nächsten Raum!\", \"Zirze\");\n                    WA.player.state.currentQuest = 'quest12';\n                    levelUp(\"modul_2\", 10);\n                }\n            });\n\n            WA.player.state.onVariableChange('terminal-2').subscribe((newValue) => {\n                if (newValue === true) {\n                    WA.player.state.module2 = '2';\n                    WA.player.state.currentQuest = 'quest15';\n                    levelUp(\"modul_2\", 10);\n                }\n            });\n\n            // When module2 changes to \"2\", paint the room green and remove the red layer\n            WA.player.state.onVariableChange('module2').subscribe((newValue) => {\n                if (newValue === '2') {\n                    const greenTiles: any[] = [];\n                    const redTiles: any[] = [];\n                    for (let x = 0; x <= 19; x++) {\n                        for (let y = 47; y <= 89; y++) {\n                            greenTiles.push({ x, y, tile: \"green\", layer: \"green\" });\n                            redTiles.push({ x, y, tile: null, layer: \"red\" });\n                        }\n                    }\n                    WA.room.setTiles(greenTiles);\n                    WA.room.setTiles(redTiles);\n                    WA.chat.sendChatMessage(\"Prima, du hast die ersten verlorenen Wortschnipsel gefunden. Diese sind wichtig, um Lord Modrevolt ein für alle Mal aus unserem System zu verbannen. Merk sie dir gut: ist / Wissenschaft / mehr\", \"Zirze\");\n                }\n            });\n            // List of variable keys that trigger events to do something (tbd)\n            const eventVariableKeys = [\n                'PlanungSelbstmanagement',\n                'ThemenfindungGliederung',\n                'Literaturrecherche',\n                'Lesen'\n            ];\n\n            // Object to track whether each key was solved\n            const solvedStatus: { [key: string]: boolean } = {};\n            eventVariableKeys.forEach(key => solvedStatus[key] = false);\n\n            // Index to enforce the solving order\n            let currentStep = 0;\n\n            // Subscribe to changes for each variable key\n            for (const key of eventVariableKeys) {\n                WA.player.state.onVariableChange(key).subscribe((newValue) => {\n                    // Only trigger if the event turns to \"solved\" and if it’s the expected key in the order\n                    if (newValue === \"solved\" && key === eventVariableKeys[currentStep] && !solvedStatus[key]) {\n                        solvedStatus[key] = true;\n                        levelUp(\"modul_2\", 10);\n                        console.log(`Variable \"${key}\" solved. Level up, +10XP`);\n\n                        // Set the quest based on the order\n                        switch (currentStep) {\n                            case 0:\n                                WA.player.state.currentQuest = \"quest10\";\n                                break;\n                            case 1:\n                                WA.player.state.currentQuest = \"quest11\";\n                                break;\n                            case 2:\n                                WA.player.state.currentQuest = \"quest13\";\n                                break;\n                            case 3:\n                                WA.player.state.currentQuest = \"quest14\";\n                                break;\n                        }\n\n                        currentStep++;\n                    }\n                });\n            }\n\n            let literatureAreaEnterTime: number | undefined;\n\n            WA.room.area.onEnter('2_3Literaturrecherche').subscribe(() => {\n                literatureAreaEnterTime = Date.now();\n            });\n\n            WA.room.area.onLeave('2_3Literaturrecherche').subscribe(() => {\n                if (literatureAreaEnterTime) {\n                    const secondsSpent = (Date.now() - literatureAreaEnterTime) / 1000;\n                    if (secondsSpent > 10) {\n                        WA.player.state.Literaturrecherche = \"solved\";\n                    }\n                    literatureAreaEnterTime = undefined;\n                }\n            });\nexport {};\n\n"],"names":["bootstrapExtra","chatAreas","getChatAreas","area","triggerMessage","currentQuest","requiredQuest","_a","quests","q","x","y","moving","material","checkPlayerMaterial","mySound","_b","_c","playRandomSound","currentQuestId","createQuestBanner","newQuestId","newQuest","questId","quest","newValue","levelUp","greenTiles","redTiles","eventVariableKeys","solvedStatus","key","currentStep","literatureAreaEnterTime"],"mappings":"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"}