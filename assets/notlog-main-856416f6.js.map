{"version":3,"file":"notlog-main-856416f6.js","sources":["../../src/notlog-main.ts"],"sourcesContent":["/// <reference types=\"@workadventure/iframe-api-typings\" />\nimport { bootstrapExtra } from \"@workadventure/scripting-api-extra\";\nimport { checkPlayerMaterial, mySound, playRandomSound } from \"./footstep\";\nimport { getChatAreas } from \"./chatArea\";\nimport { quests, levelUp } from \"./quests\";\n\nWA.onInit().then(async () => {\n    console.log('loading main.ts');\n\n    // Initialize the first quest if not already set\n    if (!WA.player.state.currentQuest) {\n        WA.player.state.currentQuest = 'quest1';\n    }\n    levelUp(\"notlog\", 0);\n\n    try {\n        // Initialize the Scripting API Extra\n        await bootstrapExtra();\n        console.log('Scripting API Extra ready');\n    } catch (e) {\n        console.error(e);\n    }\n    // Get chat areas and set up event listeners for entering and leaving them\n    const chatAreas = await getChatAreas();\n    for (const area of chatAreas) {\n        let triggerMessage: any;\n\n        // When player enters a chat area\n        WA.room.area.onEnter(area.name).subscribe(() => {\n            triggerMessage = WA.ui.displayActionMessage({\n                message: `[LEERTASTE] drÃ¼cken um mit ${area.npcName} zu sprechen.`,\n                callback: () => {\n                    WA.chat.sendChatMessage(area.chatText, area.npcName);\n                    if (area.triggerQuest) {\n                        const currentQuest = WA.player.state.currentQuest;\n                        const requiredQuest = quests.find((q: { questId: string }) => q.questId === area.triggerQuest)?.requireQuest;\n                        if (currentQuest === requiredQuest) {\n                            WA.player.state.currentQuest = area.triggerQuest;\n                        }\n                    }\n                }\n            });\n        });\n\n        // When player leaves a chat area\n        WA.room.area.onLeave(area.name).subscribe(() => {\n            if (triggerMessage) {\n                triggerMessage.remove();\n                WA.chat.close();\n            }\n        });\n    }\n\n    // Event listener for player movement to play footstep sounds\n    WA.player.onPlayerMove(async ({ x, y, moving }) => {\n        const material = await checkPlayerMaterial({ x, y });\n        if (!material) {\n            mySound?.stop();\n            return;\n        }\n\n        if (!moving && !material) {\n            mySound?.stop();\n            return;\n        } else {\n            mySound?.stop();\n            playRandomSound(material);\n        }\n    });\n\n    // Event listener for entering the downstairs area to the lab\n    WA.room.area.onEnter('downstairs_toLab').subscribe(async () => {\n        WA.room.hideLayer('fg-objects/stair-2');\n        if (isAutoMoving) return;\n        isAutoMoving = true;\n        let result = await WA.player.moveTo(1300, 1728);\n        while (result.cancelled) {\n            result = await WA.player.moveTo(1300, 1728);\n        }\n        result = await WA.player.moveTo(1325, 1643);\n        while (result.cancelled) {\n            result = await WA.player.moveTo(1325, 1643);\n        }\n        WA.room.showLayer('fg-objects/stair-2');\n        result = await WA.player.moveTo(1503, 1754);\n        while (result.cancelled) {\n            result = await WA.player.moveTo(1503, 1754);\n        }\n        isAutoMoving = false;\n    });\n\n    // Event listener for entering the upstairs area from the lab\n    WA.room.area.onEnter('upstairs_fromLab').subscribe(async () => {\n        WA.room.showLayer('fg-objects/stair-2');\n        if (isAutoMoving) return;\n        isAutoMoving = true;\n        let result = await WA.player.moveTo(1325, 1643);\n        while (result.cancelled) {\n            result = await WA.player.moveTo(1325, 1643);\n        }\n        result = await WA.player.moveTo(1300, 1728);\n        while (result.cancelled) {\n            result = await WA.player.moveTo(1300, 1728);\n        }\n        WA.room.hideLayer('fg-objects/stair-2');\n        result = await WA.player.moveTo(1513, 1568);\n        while (result.cancelled) {\n            result = await WA.player.moveTo(1513, 1568);\n        }\n        isAutoMoving = false;\n    });\n\n    // Check if the player has solved the notlog quest and is not an admin\n    const solvedNotlog = WA.player.state.solvedNotlog;\n    const isAdmin = WA.player.tags.includes('admin');\n    const mapURL = WA.room.mapURL;\n\n    console.log(\"solvedNotlog:\", solvedNotlog);\n    console.log(\"isAdmin:\", isAdmin);\n    console.log(\"mapURL:\", mapURL);\n\n    if (solvedNotlog === true && !isAdmin && mapURL.includes('notlog') && !mapURL.includes('localhost')) {\n        console.log(\"Map URL: \", mapURL);\n        // Teleport the player to the entry named \"matrix-hub\"\n        WA.nav.goToRoom(\"./matrix-hub.tmj\");\n    }\n\n    // Event listener for entering the notlog area\n    WA.room.area.onEnter('notlog').subscribe(() => {\n        console.log(\"Entered notlog area\");\n        if (solvedNotlog === true && !isAdmin) {\n            console.log(\"Map URL: \", mapURL);\n            if (!mapURL.includes('localhost')) {\n                // Teleport the player to the entry named \"matrix-hub\"\n                WA.nav.goToRoom(\"./matrix-hub.tmj\");\n            }\n        }\n    });\n\n    // Event listener for leaving the notlog area\n    WA.room.area.onEnter('leaveNotlog').subscribe(() => {\n        console.log(\"Leaving notlog area\");\n        WA.player.state.solvedNotlog = true;\n    });\n\n    // Display the current quest banner if a quest is active\n    const currentQuestId = WA.player.state.currentQuest;\n    const currentQuest = quests.find((q: { questId: string }) => q.questId === currentQuestId);\n    if (currentQuest) {\n        createQuestBanner(currentQuest.questId);\n    }\n\n    // Event listener for changes in the current quest\n    WA.player.state.onVariableChange('currentQuest').subscribe((newQuestId) => {\n        const newQuest = quests.find((q: { questId: string }) => q.questId === newQuestId);\n        if (newQuest) {\n            createQuestBanner(newQuest.questId);\n        }\n    });\n\n    // Function to create a quest banner\n    function createQuestBanner(questId: string) {\n        const quest = quests.find((q: { questId: string }) => q.questId === questId);\n        if (quest) {\n            WA.ui.banner.openBanner({\n                id: quest.questId,\n                text: quest.questDescription,\n                bgColor: '#1B1B29',\n                textColor: '#FFFFFF',\n                closable: false\n            });\n        }\n    }\n});\n\n// Variable to track if the player is auto-moving\nlet isAutoMoving = false;\n\n\n\n\nexport {};\n\n"],"names":["levelUp","bootstrapExtra","chatAreas","getChatAreas","area","triggerMessage","currentQuest","requiredQuest","_a","quests","q","x","y","moving","material","checkPlayerMaterial","mySound","_b","_c","playRandomSound","isAutoMoving","result","solvedNotlog","isAdmin","mapURL","currentQuestId","createQuestBanner","newQuestId","newQuest","questId","quest"],"mappings":"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"}