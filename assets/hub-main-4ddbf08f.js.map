{"version":3,"file":"hub-main-4ddbf08f.js","sources":["../../src/hub-main.ts"],"sourcesContent":["/// <reference types=\"@workadventure/iframe-api-typings\" />\nimport { bootstrapExtra } from \"@workadventure/scripting-api-extra\";\nimport { getChatAreas } from \"./chatArea\";\nimport { levelUp, quests } from \"./quests\";\n\nWA.onInit().then(async () => {\n    console.log('loading main.ts');\n    WA.controls.disableInviteButton();\n    WA.controls.disableMapEditor();\n    // Initialize the first quest if not already set\n \n    try {\n        // Initialize the Scripting API Extra\n        await bootstrapExtra();\n        console.log('Scripting API Extra ready');\n    } catch (e) {\n        console.error(e);\n    }});\n    WA.onInit().then(() => {\n        WA.room.area.onLeave(\"toMatrix\").subscribe(() => {\n            if (WA.player.state.currentQuest === \"quest6\") {\n                WA.player.state.currentQuest = \"quest7\";\n            }\n        });\n       \n    });\n\nWA.onInit().then(() => {\n    if (WA.player.state.currentQuest === \"quest26\") {\n        WA.chat.sendChatMessage(\n            \"Wow, das ging schnell! Du hast beide Räume gemeistert. Ich hoffe du kannst dich noch an alle Wortschnipsel erinnern. Diese musst du nun in richtiger Reihenfolge im Sicherheitsterminal eingeben. Falls du Hilfe brauchst, frag doch deine Kolleg*innen, ob ihr diese Aufgabe zusammen lösen könnt. Ich darf nicht zu viel verraten, aber eine gezielte Recherche könnte durchaus hilfreich sein. Wenn du oder ihr es schafft, können wir Lord Modrevolt endlich aus unserem System entfernen und unsere Sicherheitseinstellungen des Kondensatoriums wieder herstellen.\",\n            \"Zirze\"\n        );\n    }\n    else console.log(\"not quest26\")\n});\n\nWA.onInit().then(async () => {\n    // Get chat areas and set up event listeners for entering and leaving them\n    const chatAreas = await getChatAreas();\n    for (const area of chatAreas) {\n        let triggerMessage: any;\n        \n        // When player enters a chat area\n        WA.room.area.onEnter(area.name).subscribe(() => {\n            triggerMessage = WA.ui.displayActionMessage({\n                message: `[LEERTASTE] drücken um mit ${area.npcName} zu sprechen.`,\n                callback: () => {\n                    WA.chat.sendChatMessage(area.chatText, area.npcName);\n                    if (area.triggerQuest) {\n                        const currentQuest = WA.player.state.currentQuest;\n                        const requiredQuest = quests.find((q: { questId: string }) => q.questId === area.triggerQuest)?.requireQuest;\n                        if (currentQuest === requiredQuest) {\n                            WA.player.state.currentQuest = area.triggerQuest;\n                        }\n                    }\n                }\n            });\n        });\n\n        // When player leaves a chat area\n        WA.room.area.onLeave(area.name).subscribe(() => {\n            if (triggerMessage) {\n                triggerMessage.remove();\n                WA.chat.close();\n            }\n        });\n    }\n\n    // Display the current quest banner if a quest is active\n    const currentQuestId = WA.player.state.currentQuest;\n    const currentQuest = quests.find((q: { questId: string }) => q.questId === currentQuestId);\n    if (currentQuest) {\n        createQuestBanner(currentQuest.questId);\n    }\n\n    // Event listener for changes in the current quest\n    WA.player.state.onVariableChange('currentQuest').subscribe((newQuestId) => {\n        const newQuest = quests.find((q: { questId: string }) => q.questId === newQuestId);\n        if (newQuest) {\n            createQuestBanner(newQuest.questId);\n        }\n    });\n\n    // Function to create a quest banner\n    function createQuestBanner(questId: string) {\n        const quest = quests.find((q: { questId: string }) => q.questId === questId);\n        if (quest) {\n            WA.ui.banner.openBanner({\n                id: quest.questId,\n                text: quest.questDescription,\n                timeToClose: 0,\n                bgColor: '#1B1B29',\n                textColor: '#FFFFFF',\n                closable: false\n            });\n        }\n    }\n});\nWA.onInit().then(async () => {\n    if (WA.player.state.module2 === '2' && WA.player.state.module3 === '2') {\n        // Only display the terminal layers\n        WA.room.area.onEnter(\"finalCodeTerminal\").subscribe(() => {\n            WA.chat.sendChatMessage(\"Bitte gib das Lösungswort ein\", \"Zirze\");\n    \n\n        WA.chat.onChatMessage(async (message, event) => {\n            // Check if the message is coming from the local user\n            if (event.authorId === undefined) {\n                const lowerMsg = message.toLowerCase();\n                if (\n                    lowerMsg.includes(\"wissenschaft\") &&\n                    lowerMsg.includes(\"wissenssammlung\") &&\n                    lowerMsg.includes(\"art\") &&\n                    lowerMsg.includes(\"denken\")\n                ) {\n                    WA.chat.sendChatMessage(\"Success: Das ist korrekt, ich teleportiere dich zurück zu Prof. Mumblecore!\", \"Zirze\");\n                    await new Promise(resolve => setTimeout(resolve, 2000));\n                    WA.player.state.currentQuest = \"quest27\"\n                    levelUp(\"notlog\", 177);\n                    WA.nav.goToRoom(\"./notlog-solved.tmj\");\n                } else {\n                    WA.chat.sendChatMessage(\"Error: Das war nicht die korrekte Antwort. Erinnere dich daran was Wissenschaft ist und was nicht.\", \"Zirze\");\n                }\n            }\n        }, { scope: 'local' })});\n    } else {\n        WA.room.area.onEnter(\"finalCodeTerminal\").subscribe(() => {\n            WA.chat.sendChatMessage(\"## 🖥️ Reparatur des Computerterminals  \\n\\n Komme hierhin zurück, wenn du **Modul 2** und **3** gelöst hast. ✅   \\n\\n Um dieses **Computerterminal** zu reparieren, benötigst du die richtigen **Wortschnipsel**, die beim **Einbruch durch Lord Modrevolt** 💀 durcheinandergeraten sind.  \\n\\n Finde die Fragmente und setze sie korrekt zusammen, um das System wiederherzustellen! 🚀 \", \"Zirze\");\n        });\n    }\n    WA.room.area.onLeave(\"finalCodeTerminal\").subscribe(() => {\n        WA.chat.close();\n    });\n});\nWA.onInit().then(() => {\n    function updateRoomForSolved() {\n        const solvedModule2 = WA.player.state.module2 === '2';\n        const solvedModule3 = WA.player.state.module3 === '2';\n\n        // Both modules solved: recolor the entire map and send the full success message.\n        if (solvedModule2 && solvedModule3) {\n            const green: any[] = [];\n            const red: any[] = [];\n            for (let x = 0; x <= 47; x++) {\n                for (let y = 0; y <= 36; y++) {\n                    green.push({ x, y, tile: \"green\", layer: \"green\" });\n                    red.push({ x, y, tile: \"red\", layer: \"red\" });\n                }\n            }\n            // Combine the green and red tile changes in one call.\n            WA.room.setTiles([...green, ...red]);\n            WA.chat.sendChatMessage(\n                \"🌟 **Wow, das ging schnell!** 🌟   \\n\\nDu hast **beide Module gemeistert**. 💪   \\n\\nIch hoffe, du kannst dich noch an alle **Wortschnipsel**✂️ erinnern. Diese musst du nun in **richtiger Reihenfolge** im **Sicherheitsterminal** eingeben. 🔐   \\n\\nFalls du Hilfe brauchst, frag doch deine **Kolleg*innen**, ob ihr diese Aufgabe zusammen lösen könnt. 🤝👩‍💻👨‍💻   \\n\\nIch darf nicht zu viel verraten, aber eine **gezielte Recherche** könnte durchaus hilfreich sein. 🔍   \\n\\nWenn du oder ihr es schafft, können wir **Lord Modrevolt**💀 endlich aus unserem System entfernen und unsere **Sicherheitseinstellungen** des **Kondensatoriums** wieder herstellen. 🛡️🚀\",\n                \"Zirze\"\n            );\n        } \n        // Only module2 solved: send the message that encourages the user to continue.\n        else if (solvedModule2) {\n            WA.chat.sendChatMessage(\n                \"🎉 **Hervorragend, dich kann man gebrauchen!** 🎉   \\n\\nDu hast **Modul 2** gemeistert und schon einiges über die Techniken des wissenschaftlichen Arbeitens gelernt. 🧠📚   \\n\\nVergiss deine **Wortschnipsel** nicht, diese sind sehr wichtig! ✂️💡   \\n\\nDu bist nun bereit, mit **Modul 3** weiterzumachen, um mehr über das **wissenschaftliche Schreiben** zu erfahren. ✍️📖\",\n                \"Zirze\"\n            );\n        }\n    }\n\n    // Subscribe to changes on both module2 and module3.\n    WA.player.state.onVariableChange(\"module2\").subscribe(updateRoomForSolved);\n    WA.player.state.onVariableChange(\"module3\").subscribe(updateRoomForSolved);\n\n    // Run once in case both variables are already set.\n    updateRoomForSolved();\n});\nexport {};\n\n"],"names":["bootstrapExtra","e","chatAreas","getChatAreas","area","triggerMessage","currentQuest","requiredQuest","_a","quests","q","currentQuestId","createQuestBanner","newQuestId","newQuest","questId","quest","message","event","lowerMsg","resolve","levelUp","updateRoomForSolved","solvedModule2","solvedModule3","green","red","x","y"],"mappings":"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"}