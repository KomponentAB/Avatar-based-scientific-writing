{"version":3,"file":"module2-main-c92834c6.js","sources":["../../src/module2-main.ts"],"sourcesContent":["/// <reference types=\"@workadventure/iframe-api-typings\" />\nimport { checkPlayerMaterial, mySound, playRandomSound } from \"./footstep\";\nimport { getChatAreas } from \"./chatArea\";\nimport { levelUp, quests } from \"./quests\";\nimport { bootstrapExtra } from \"@workadventure/scripting-api-extra\";\n\n\nWA.onInit().then(async () => {\n    try {\n        // Initialize the Scripting API Extra\n        await bootstrapExtra();\n        WA.controls.disableInviteButton();\n        WA.controls.disableMapEditor();\n        console.log('Scripting API Extra ready');\n    } catch (e) {\n        console.error(e);\n    }\n    // Get chat areas and set up event listeners for entering and leaving them\n    const chatAreas = await getChatAreas();\n    for (const area of chatAreas) {\n        let triggerMessage: any;\n\n        // When player enters a chat area\n        WA.room.area.onEnter(area.name).subscribe(() => {\n            triggerMessage = WA.ui.displayActionMessage({\n                message: `[LEERTASTE] drÃ¼cken um mit ${area.npcName} zu sprechen.`,\n                callback: () => {\n                    WA.chat.sendChatMessage(area.chatText, area.npcName);\n                    if (area.triggerQuest) {\n                        const currentQuest = WA.player.state.currentQuest;\n                        const requiredQuest = quests.find((q: { questId: string }) => q.questId === area.triggerQuest)?.requireQuest;\n                        if (currentQuest === requiredQuest) {\n                            WA.player.state.currentQuest = area.triggerQuest;\n                        }\n                    }\n                }\n            });\n        });\n\n        // When player leaves a chat area\n        WA.room.area.onLeave(area.name).subscribe(() => {\n            if (triggerMessage) {\n                triggerMessage.remove();\n                WA.chat.close();\n            }\n        });\n    }\n\n    // Event listener for player movement to play footstep sounds\n    WA.player.onPlayerMove(async ({ x, y, moving }) => {\n        const material = await checkPlayerMaterial({ x, y });\n        if (!material) {\n            mySound?.stop();\n            return;\n        }\n\n        if (!moving && !material) {\n            mySound?.stop();\n            return;\n        } else {\n            mySound?.stop();\n            playRandomSound(material);\n        }\n    });\n\n\n    // Display the current quest banner if a quest is active\n    const currentQuestId = WA.player.state.currentQuest;\n    const currentQuest = quests.find((q: { questId: string }) => q.questId === currentQuestId);\n    if (currentQuest) {\n        createQuestBanner(currentQuest.questId);\n    }\n\n    // Event listener for changes in the current quest\n    WA.player.state.onVariableChange('currentQuest').subscribe((newQuestId) => {\n        const newQuest = quests.find((q: { questId: string }) => q.questId === newQuestId);\n        if (newQuest) {\n            createQuestBanner(newQuest.questId);\n        }\n    });\n\n    // Function to create a quest banner\n    function createQuestBanner(questId: string) {\n        const quest = quests.find((q: { questId: string }) => q.questId === questId);\n        if (quest) {\n            WA.ui.banner.openBanner({\n                id: quest.questId,\n                text: quest.questDescription,\n                bgColor: '#1B1B29',\n                textColor: '#FFFFFF',\n                closable: false\n            });\n        }\n    }\n});\nWA.room.area.onEnter('triggerM2Quests').subscribe(() => {\n    WA.player.state.currentQuest = 'quest8' ;\n});\n\n            \n            // Hardcoded module configurations\n            interface ModuleTileConfig {\n                moduleName: string;\n                triggerValue: string | number;\n                startX: number;\n                endX: number;\n                startY: number;\n                endY: number;\n            }\n\n            function updateTiles(config: ModuleTileConfig) {\n                const { moduleName, triggerValue, startX, endX, startY, endY } = config;\n                if (WA.player.state[moduleName] !== triggerValue) return;\n                const green: any[] = [];\n                const red: any[] = [];\n                for (let x = startX; x <= endX; x++) {\n                    for (let y = startY; y <= endY; y++) {\n                        green.push({ x, y, tile: \"green\", layer: \"green\" });\n                        red.push({ x, y, tile: null, layer: \"red\" });\n                    }\n                }\n                WA.room.setTiles(green);\n                WA.room.setTiles(red);\n            }\n\n            const hardcodedModules: { [key: string]: {triggerValue: string; startX: number; endX: number; startY: number; endY: number } } = {\n                module_2_1: {\n                    triggerValue: \"2\",\n                    startX: 4,\n                    endX: 15,\n                    startY: 71,\n                    endY: 89,\n                },\n                module_2_2: {\n                    triggerValue: \"2\",\n                    startX: 4,\n                    endX: 15,\n                    startY: 47,\n                    endY: 70,\n                },\n            };\n\n\n            let moduleSumTriggered = false;\n            function checkModuleSumTrigger() {\n                if (moduleSumTriggered) return;\n                const module2_1 = Number(WA.player.state.module_2_1);\n                const module2_2 = Number(WA.player.state.module_2_2);\n                const requiredSum =\n                    Number(hardcodedModules.module_2_1.triggerValue) +\n                    Number(hardcodedModules.module_2_2.triggerValue);\n                if (module2_1 + module2_2 === requiredSum) {\n                    moduleSumTriggered = true;\n                    WA.player.state.currentQuest = 'quest9';\n                }\n            }\n\n            WA.player.state.onVariableChange(\"module_2_1\").subscribe(() => {\n                checkModuleSumTrigger();\n            });\n            WA.player.state.onVariableChange(\"module_2_2\").subscribe(() => {\n                checkModuleSumTrigger();\n            });\n\n\n            WA.onInit().then(() => {\n                // Initial updates using hardcodedModules\n                for (const moduleName in hardcodedModules) {\n                    const config = hardcodedModules[moduleName];\n                    updateTiles({\n                        moduleName,\n                        triggerValue: config.triggerValue,\n                        startX: config.startX,\n                        endX: config.endX,\n                        startY: config.startY,\n                        endY: config.endY,\n                    });\n                }\n            });\n\n            // Subscribe to changes for each module tile configuration from hardcodedModules\n            for (const moduleName in hardcodedModules) {\n                const config = hardcodedModules[moduleName];\n                WA.player.state.onVariableChange(moduleName).subscribe((newValue) => {\n                    if (newValue === config.triggerValue) {\n                        updateTiles({\n                            moduleName,\n                            triggerValue: config.triggerValue,\n                            startX: config.startX,\n                            endX: config.endX,\n                            startY: config.startY,\n                            endY: config.endY,\n                        });\n                    }\n                });\n            }\n            // List of variable keys that trigger events to do something (tbd)\n            const eventVariableKeys = [\n            'PlanungSelbstmanagement','ThemenfindungGliederung', 'Literaturrecherche' ,'Lesen'\n                 // The key used to track the current quest state\n                // Add additional keys here when needed\n            ];\n        \n            // Subscribe to changes for each variable key\n            for (const key of eventVariableKeys) {\n                WA.player.state.onVariableChange(key).subscribe((newValue) => {\n                    \n                    levelUp(\"modul_2\",10)\n                    console.log(`Variable \"${key}\" changed to:`, newValue, \"Level up, +10XP\");\n                });\n            }\n    \nexport {};\n\n"],"names":["bootstrapExtra","e","chatAreas","getChatAreas","area","triggerMessage","currentQuest","requiredQuest","_a","quests","q","x","y","moving","material","checkPlayerMaterial","mySound","_b","_c","playRandomSound","currentQuestId","createQuestBanner","newQuestId","newQuest","questId","quest","updateTiles","config","moduleName","triggerValue","startX","endX","startY","endY","green","red","hardcodedModules","moduleSumTriggered","checkModuleSumTrigger","module2_1","module2_2","requiredSum","newValue","eventVariableKeys","key","levelUp"],"mappings":"8EAOA,GAAG,OAAA,EAAS,KAAK,SAAY,CACrB,GAAA,CAEA,MAAMA,EAAe,EACrB,GAAG,SAAS,sBACZ,GAAG,SAAS,mBACZ,QAAQ,IAAI,2BAA2B,QAClCC,EAAG,CACR,QAAQ,MAAMA,CAAC,CACnB,CAEM,MAAAC,EAAY,MAAMC,IACxB,UAAWC,KAAQF,EAAW,CACtB,IAAAG,EAGJ,GAAG,KAAK,KAAK,QAAQD,EAAK,IAAI,EAAE,UAAU,IAAM,CAC3BC,EAAA,GAAG,GAAG,qBAAqB,CACxC,QAAS,8BAA8BD,EAAK,OAAO,gBACnD,SAAU,IAAM,OAEZ,GADA,GAAG,KAAK,gBAAgBA,EAAK,SAAUA,EAAK,OAAO,EAC/CA,EAAK,aAAc,CACbE,MAAAA,EAAe,GAAG,OAAO,MAAM,aAC/BC,GAAgBC,EAAAC,EAAO,KAAMC,GAA2BA,EAAE,UAAYN,EAAK,YAAY,IAAvE,YAAAI,EAA0E,aAC5FF,IAAiBC,IACd,GAAA,OAAO,MAAM,aAAeH,EAAK,aAE5C,CACJ,CAAA,CACH,CAAA,CACJ,EAGD,GAAG,KAAK,KAAK,QAAQA,EAAK,IAAI,EAAE,UAAU,IAAM,CACxCC,IACAA,EAAe,OAAO,EACtB,GAAG,KAAK,QACZ,CACH,CACL,CAGA,GAAG,OAAO,aAAa,MAAO,CAAE,EAAAM,EAAG,EAAAC,EAAG,OAAAC,KAAa,WAC/C,MAAMC,EAAW,MAAMC,EAAoB,CAAE,EAAAJ,EAAG,EAAAC,CAAG,CAAA,EACnD,GAAI,CAACE,EAAU,EACXN,EAAAQ,IAAA,MAAAR,EAAS,OACT,MACJ,CAEI,GAAA,CAACK,GAAU,CAACC,EAAU,EACtBG,EAAAD,IAAA,MAAAC,EAAS,OACT,MAAA,MAEAC,EAAAF,IAAA,MAAAE,EAAS,OACTC,EAAgBL,CAAQ,CAC5B,CACH,EAIK,MAAAM,EAAiB,GAAG,OAAO,MAAM,aACjCd,EAAeG,EAAO,KAAMC,GAA2BA,EAAE,UAAYU,CAAc,EACrFd,GACAe,EAAkBf,EAAa,OAAO,EAI1C,GAAG,OAAO,MAAM,iBAAiB,cAAc,EAAE,UAAWgB,GAAe,CACvE,MAAMC,EAAWd,EAAO,KAAMC,GAA2BA,EAAE,UAAYY,CAAU,EAC7EC,GACAF,EAAkBE,EAAS,OAAO,CACtC,CACH,EAGD,SAASF,EAAkBG,EAAiB,CACxC,MAAMC,EAAQhB,EAAO,KAAMC,GAA2BA,EAAE,UAAYc,CAAO,EACvEC,GACG,GAAA,GAAG,OAAO,WAAW,CACpB,GAAIA,EAAM,QACV,KAAMA,EAAM,iBACZ,QAAS,UACT,UAAW,UACX,SAAU,EAAA,CACb,CAET,CACJ,CAAC,EACD,GAAG,KAAK,KAAK,QAAQ,iBAAiB,EAAE,UAAU,IAAM,CACjD,GAAA,OAAO,MAAM,aAAe,QACnC,CAAC,EAaW,SAASC,EAAYC,EAA0B,CAC3C,KAAM,CAAE,WAAAC,EAAY,aAAAC,EAAc,OAAAC,EAAQ,KAAAC,EAAM,OAAAC,EAAQ,KAAAC,CAAS,EAAAN,EACjE,GAAI,GAAG,OAAO,MAAMC,CAAU,IAAMC,EAAc,OAClD,MAAMK,EAAe,CAAA,EACfC,EAAa,CAAA,EACnB,QAASxB,EAAImB,EAAQnB,GAAKoB,EAAMpB,IAC5B,QAASC,EAAIoB,EAAQpB,GAAKqB,EAAMrB,IACtBsB,EAAA,KAAK,CAAE,EAAAvB,EAAG,EAAAC,EAAG,KAAM,QAAS,MAAO,QAAS,EAC9CuB,EAAA,KAAK,CAAE,EAAAxB,EAAG,EAAAC,EAAG,KAAM,KAAM,MAAO,MAAO,EAGhD,GAAA,KAAK,SAASsB,CAAK,EACnB,GAAA,KAAK,SAASC,CAAG,CACxB,CAEA,MAAMC,EAA2H,CAC7H,WAAY,CACR,aAAc,IACd,OAAQ,EACR,KAAM,GACN,OAAQ,GACR,KAAM,EACV,EACA,WAAY,CACR,aAAc,IACd,OAAQ,EACR,KAAM,GACN,OAAQ,GACR,KAAM,EACV,CACJ,EAGA,IAAIC,EAAqB,GACzB,SAASC,GAAwB,CACzB,GAAAD,EAAoB,OACxB,MAAME,EAAY,OAAO,GAAG,OAAO,MAAM,UAAU,EAC7CC,EAAY,OAAO,GAAG,OAAO,MAAM,UAAU,EAC7CC,EACF,OAAOL,EAAiB,WAAW,YAAY,EAC/C,OAAOA,EAAiB,WAAW,YAAY,EAC/CG,EAAYC,IAAcC,IACLJ,EAAA,GAClB,GAAA,OAAO,MAAM,aAAe,SAEvC,CAEA,GAAG,OAAO,MAAM,iBAAiB,YAAY,EAAE,UAAU,IAAM,CACrCC,GAC1B,CAAC,EACD,GAAG,OAAO,MAAM,iBAAiB,YAAY,EAAE,UAAU,IAAM,CACrCA,GAC1B,CAAC,EAGD,GAAG,OAAA,EAAS,KAAK,IAAM,CAEnB,UAAWV,KAAcQ,EAAkB,CACjC,MAAAT,EAASS,EAAiBR,CAAU,EAC9BF,EAAA,CACR,WAAAE,EACA,aAAcD,EAAO,aACrB,OAAQA,EAAO,OACf,KAAMA,EAAO,KACb,OAAQA,EAAO,OACf,KAAMA,EAAO,IAAA,CAChB,CACL,CACJ,CAAC,EAGD,UAAWC,KAAcQ,EAAkB,CACjC,MAAAT,EAASS,EAAiBR,CAAU,EAC1C,GAAG,OAAO,MAAM,iBAAiBA,CAAU,EAAE,UAAWc,GAAa,CAC7DA,IAAaf,EAAO,cACRD,EAAA,CACR,WAAAE,EACA,aAAcD,EAAO,aACrB,OAAQA,EAAO,OACf,KAAMA,EAAO,KACb,OAAQA,EAAO,OACf,KAAMA,EAAO,IAAA,CAChB,CACL,CACH,CACL,CAEA,MAAMgB,EAAoB,CAC1B,0BAA0B,0BAA2B,qBAAsB,OAG3E,EAGA,UAAWC,KAAOD,EACd,GAAG,OAAO,MAAM,iBAAiBC,CAAG,EAAE,UAAWF,GAAa,CAE1DG,EAAQ,UAAU,EAAE,EACpB,QAAQ,IAAI,aAAaD,CAAG,gBAAiBF,EAAU,iBAAiB,CAAA,CAC3E"}