{"version":3,"file":"module3-main-2ae0403f.js","sources":["../../src/module3-main.ts"],"sourcesContent":["/// <reference types=\"@workadventure/iframe-api-typings\" />\nimport { checkPlayerMaterial, mySound, playRandomSound } from \"./footstep\";\nimport { getChatAreas } from \"./chatArea\";\nimport { levelUp, quests } from \"./quests\";\nimport { bootstrapExtra, getLayersMap } from \"@workadventure/scripting-api-extra\";\n\n\nWA.onInit().then(async () => {\n    \n    try {\n        // Initialize the Scripting API Extra\n        await bootstrapExtra();\n        console.log('Scripting API Extra ready');\n    } catch (e) {\n        console.error(e);\n    }\n    // Get chat areas and set up event listeners for entering and leaving them\n    const chatAreas = await getChatAreas();\n    for (const area of chatAreas) {\n        let triggerMessage: any;\n\n        // When player enters a chat area\n        WA.room.area.onEnter(area.name).subscribe(() => {\n            triggerMessage = WA.ui.displayActionMessage({\n                message: `[LEERTASTE] drücken um mit ${area.npcName} zu sprechen.`,\n                callback: () => {\n                    WA.chat.sendChatMessage(area.chatText, area.npcName);\n                    if (area.triggerQuest) {\n                        const currentQuest = WA.player.state.currentQuest;\n                        const requiredQuest = quests.find((q: { questId: string }) => q.questId === area.triggerQuest)?.requireQuest;\n                        if (currentQuest === requiredQuest) {\n                            WA.player.state.currentQuest = area.triggerQuest;\n                        }\n                    }\n                }\n            });\n        });\n\n        // When player leaves a chat area\n        WA.room.area.onLeave(area.name).subscribe(() => {\n            if (triggerMessage) {\n                triggerMessage.remove();\n                WA.chat.close();\n            }\n        });\n    }\n\n    // Event listener for player movement to play footstep sounds\n    WA.player.onPlayerMove(async ({ x, y, moving }) => {\n        const material = await checkPlayerMaterial({ x, y });\n        if (!material) {\n            mySound?.stop();\n            return;\n        }\n\n        if (!moving && !material) {\n            mySound?.stop();\n            return;\n        } else {\n            mySound?.stop();\n            playRandomSound(material);\n        }\n    });\n\n\n    // Display the current quest banner if a quest is active\n    const currentQuestId = WA.player.state.currentQuest;\n    const currentQuest = quests.find((q: { questId: string }) => q.questId === currentQuestId);\n    if (currentQuest) {\n        createQuestBanner(currentQuest.questId);\n    }\n\n    // Event listener for changes in the current quest\n    WA.player.state.onVariableChange('currentQuest').subscribe((newQuestId) => {\n        const newQuest = quests.find((q: { questId: string }) => q.questId === newQuestId);\n        if (newQuest) {\n            createQuestBanner(newQuest.questId);\n        }\n    });\n\n    // Function to create a quest banner\n    function createQuestBanner(questId: string) {\n        const quest = quests.find((q: { questId: string }) => q.questId === questId);\n        if (quest) {\n            WA.ui.banner.openBanner({\n                id: quest.questId,\n                text: quest.questDescription,\n                bgColor: '#1B1B29',\n                textColor: '#FFFFFF',\n                closable: false\n            });\n        }\n    }\n});\n\ninterface WorkbookArea {\n    name: string;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    XP: string;\n    completionMessage: string;\n    h5pPath: string;\n    messageNpc: string;\n    moduleMax: string;\n    moduleName: string;\n    workbookName: string;\n}\n\nasync function getWorkbookAreas(): Promise<WorkbookArea[]> {\n    try {\n        const layers = await getLayersMap();\n        const areas: WorkbookArea[] = [];\n\n        for (const layer of layers.values()) {\n            if (layer.type === \"objectgroup\") {\n                for (const object of layer.objects) {\n                    if (!object.properties) continue;\n                    if (\n                        object.properties.some(\n                            (prop) => prop.name === \"isWorkbook\" && prop.value === true\n                        )\n                    ) {\n                        const XP = object.properties.find(\n                            (prop) => prop.name === \"XP\"\n                        )?.value;\n                        const completionMessage = object.properties.find(\n                            (prop) => prop.name === \"completionMessage\"\n                        )?.value;\n                        const h5pPath = object.properties.find(\n                            (prop) => prop.name === \"h5pPath\"\n                        )?.value;\n                        const messageNpc = object.properties.find(\n                            (prop) => prop.name === \"messageNpc\"\n                        )?.value;\n                        const moduleMax = object.properties.find(\n                            (prop) => prop.name === \"moduleMax\"\n                        )?.value;\n                        const moduleName = object.properties.find(\n                            (prop) => prop.name === \"moduleName\"\n                        )?.value;\n                        const workbookName = object.properties.find(\n                            (prop) => prop.name === \"workbookName\"\n                        )?.value;\n\n                        if (h5pPath && moduleName) {\n                            areas.push({\n                                name: object.name,\n                                x: object.x,\n                                y: object.y,\n                                width: object.width ?? 0,\n                                height: object.height ?? 0,\n                                XP: String(XP),\n                                completionMessage: String(completionMessage),\n                                h5pPath: String(h5pPath),\n                                workbookName: String(workbookName),\n                                messageNpc: String(messageNpc),\n                                moduleMax: String(moduleMax),\n                                moduleName: String(moduleName),\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        console.log(\"Found workbook areas:\", areas);\n        return areas;\n    } catch (error) {\n        console.error(\"Error while getting workbook areas:\", error);\n        return [];\n    }\n};\n\n\n   \n        \n        (async () => {\n            // Get workbook areas and set up event listeners for entering and leaving them\n            const workbookAreas = await getWorkbookAreas();\n            for (const area of workbookAreas) {\n                    let messagePrompt: any;\n        \n                    WA.room.area.onEnter(area.name).subscribe({ next: () => {\n                        messagePrompt = WA.ui.displayActionMessage({\n                            message: \"Drücke LEERTASTE zum Öffnen des Workbooks\",\n                            callback: () => {\n                                WA.ui.modal.openModal({\n                                    title: area.moduleName,\n                                    src: `https://komponentab.github.io/Avatar-based-scientific-writing${area.h5pPath}`,\n                                    allowApi: true,\n                                    position: \"right\",\n                                    allow: null\n                                });\n                            }\n                        });\n                    \n                       \n                    }});\n        \n                    // When player leaves a workbook area\n                    WA.room.area.onLeave(area.moduleName).subscribe(() => {\n                            if (messagePrompt) {\n                                    messagePrompt.remove();\n                                    WA.chat.close();\n                            }\n                    });\n            }\n            // Single dynamic tile update system\n            interface ModuleTileConfig {\n                moduleKey: string;\n                triggerValue: string;\n                startX: number;\n                endX: number;\n                startY: number;\n                endY: number;\n            }\n        \n            const moduleConfigs: ModuleTileConfig[] = [\n                { moduleKey: \"module_3_1\", triggerValue: \"3\", startX: 4, endX: 15, startY: 71, endY: 89 },\n                { moduleKey: \"module_3_2\", triggerValue: \"4\", startX: 4, endX: 15, startY: 47, endY: 85 }\n            ];\n        \n            function updateTiles(config: ModuleTileConfig) {\n                const { moduleKey, triggerValue, startX, endX, startY, endY } = config;\n                if (WA.player.state[moduleKey] !== triggerValue) return;\n                const green: any[] = [], red: any[] = [];\n                for (let x = startX; x <= endX; x++) {\n                for (let y = startY; y <= endY; y++) {\n                    green.push({ x, y, tile: \"green\", layer: \"green\" });\n                    red.push({ x, y, tile: null, layer: \"red\" });\n                }\n                }\n                WA.room.setTiles(green);\n                WA.room.setTiles(red);\n            }\n        \n            WA.onInit().then(() => {\n                // Prepare module_3_2 state\n                WA.player.state.module_1_1 = {};\n                \n                // Initial updates\n                moduleConfigs.forEach(config => updateTiles(config));\n            });\n        \n            // Subscribe to changes\n            moduleConfigs.forEach(config => {\n                WA.player.state.onVariableChange(config.moduleKey).subscribe((newValue) => {\n                if (newValue === config.triggerValue) updateTiles(config);\n                });\n            });\n            // List of variable keys that trigger events to do something (tbd)\n            const eventVariableKeys = [\n                'Textarten',\n                'allgemeineRegeln',\n                'Sprache',\n                'Zitiren',\n                'ZitierenImText',\n                'Literaturverzeichnis',\n                'Literaturverwaltung'\n                 // The key used to track the current quest state\n                // Add additional keys here when needed\n            ];\n        \n            // Subscribe to changes for each variable key\n            for (const key of eventVariableKeys) {\n                WA.player.state.onVariableChange(key).subscribe((newValue) => {\n                    \n                    levelUp(\"modul_3\",10)\n                    console.log(`Variable \"${key}\" changed to:`, newValue, \"Level up, +10XP\");\n                });\n            }\n        })();\nexport {};\n\n"],"names":["bootstrapExtra","chatAreas","getChatAreas","area","triggerMessage","currentQuest","requiredQuest","_a","quests","q","x","y","moving","material","checkPlayerMaterial","mySound","_b","_c","playRandomSound","currentQuestId","createQuestBanner","newQuestId","newQuest","questId","quest","getWorkbookAreas","layers","getLayersMap","areas","layer","object","prop","XP","completionMessage","h5pPath","messageNpc","_d","moduleMax","_e","moduleName","_f","workbookName","_g","error","workbookAreas","messagePrompt","moduleConfigs","updateTiles","config","moduleKey","triggerValue","startX","endX","startY","endY","green","red","newValue","eventVariableKeys","key","levelUp"],"mappings":"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"}